pipeline{
    agent any
     tools {
        maven 'Maven3.9.6'
    }
    
    environment{
        PATH = "/opt/maven3.9.6/bin:$PATH"
    }
    stages{
        stage("Git Checkout"){
            steps{
                git credentialsId: 'Jenkins-docker', url: 'https://github.com/harishahr/myweb.git'
            }
        }
        stage("Maven Build"){
            steps{
                sh "mvn clean package sonar:sonar "
                
            }
        }
        stage('Upload War To Nexus'){
            steps{
                  nexusArtifactUploader artifacts: [
                       [
                          artifactId: 'myweb',
                          classifier: '',
                          file: 'target/myweb-3.65.0.war', 
                          type: 'war'
                ]
            ],
                         credentialsId: 'nexus-cred',
                         groupId: 'in.javahome',
                         nexusUrl: '18.205.23.194:8081',
                         nexusVersion: 'nexus3',
                         protocol: 'http',
                         repository: 'facebook-release',
                         version: '3.65.0'  
              }
            }
        stage('Build Docker Image'){
            steps{
                 sh 'docker build -t harishhr/spring-boot.'
                 sh 'docker build -t tomcat:${BUILD_NUMBER} .'
                 sh 'docker run -itd --name srini36 -p 2900:8080 tomcat:${BUILD_NUMBER}'
             }
         }
        stage('Push Docker Image'){
             steps{
                  withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
                      sh "docker login -u harishahr -p ${DOCKER_HUB_CREDENTIALS}"
            }
            sh 'docker push harishahr/spring-boot'
        }
      }
        
        
    }
}
